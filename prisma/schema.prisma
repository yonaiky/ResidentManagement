// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Resident {
  id              Int           @id @default(autoincrement())
  name            String
  apellido        String?
  cedula          String        @unique
  noRegistro      String?       @unique
  phone           String
  address         String
  paymentStatus   String        @default("pending")
  lastPaymentDate DateTime?
  nextPaymentDate DateTime?
  whatsappConsent Boolean       @default(false)
  tokens          Token[]
  payments        Payment[]
  notifications   Notification[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Token {
  id              Int           @id @default(autoincrement())
  name            String
  status          String        @default("active")
  paymentStatus   String        @default("pending")
  lastPaymentDate DateTime?
  nextPaymentDate DateTime?
  dueDate         DateTime?     // Fecha l√≠mite para el pago
  residentId      Int
  resident        Resident      @relation(fields: [residentId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Payment {
  id            Int      @id @default(autoincrement())
  amount        Float
  status        String   @default("pending") // pending, paid, overdue
  paymentDate   DateTime?
  dueDate       DateTime?
  month         Int
  year          Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  resident      Resident @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Notification {
  id              Int           @id @default(autoincrement())
  message         String
  type            String        @default("info")
  read            Boolean       @default(false)
  residentId      Int
  resident        Resident      @relation(fields: [residentId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now())
}